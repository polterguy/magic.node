<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageId>magic.node</PackageId>
    <Authors>Aista, Ltd</Authors>
    <Company>Aista, Ltd</Company>
    <Copyright>Aista, Ltd</Copyright>
    <Description>A generic graph object for your own needs to implement syntax trees and similar constructs. Provides you with a name/value/children type of graph object, where your value can be any object type you wish. The project encapsulates the C# implementation of Hyperlambda, implying its lambda node structure. To use package go to https://polterguy.github.io</Description>
    <PackageProjectUrl>https://ainiro.io</PackageProjectUrl>
    <PackOnBuild>true</PackOnBuild>
    <PackageVersion>16.11.5</PackageVersion>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/polterguy/magic.node</RepositoryUrl>
    <PackageTags>graph, dynamic, dsl, hyperlambda, scripting, tree</PackageTags>
    <PackageIcon>ico.png</PackageIcon>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <PropertyGroup>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <ItemGroup>
      <None Include="..\README.md" Pack="true" PackagePath="\"/>
  </ItemGroup>

  <PropertyGroup>
    <PackageLicenseExpression>LGPL-3.0-only</PackageLicenseExpression>
  </PropertyGroup>

  <ItemGroup>
    <None Include="../ico.png" Pack="true" PackagePath="$(PackageIcon)"/>
  </ItemGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DocumentationFile>bin/Release/netstandard2.0/magic.node.xml</DocumentationFile>
  </PropertyGroup>

</Project>
